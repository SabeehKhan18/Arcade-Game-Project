package Characters;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Rectangle;

import Game.Game;
import Helpers.RandomHelper;
import Weapons.Blaster;
import Weapons.Lancer;
import Weapons.RYNO;

public class Mushroom extends Movable {

	private int x,y;
	private int damageValue;
	private boolean canBePoisoned, spiderCanKill;
	
	private Color color;
	
	public Mushroom(Game game, int xLocation, int yLocation) {
		super(game);
		this.x = xLocation;
		this.y = yLocation;
		this.damageValue = 4;
		this.color = Color.red;
		this.canBePoisoned = RandomHelper.randBoolean();
		this.spiderCanKill = RandomHelper.randBoolean();
	}
	
	public void damage() {
		this.damageValue--;
		if (this.damageValue <= 0) {
			this.die();
		}
	}
	
	@Override
	public void tick() {
		// TODO Auto-generated method stub.
		// Nothing to do here
	}

	@Override
	public void render(Graphics2D g) {
		// Will implement when damaging mushrooms is taken into account
		g.setColor(color);
		double fillValue = (this.damageValue/4.0)*32.0;
		g.fillRect(this.x, this.y, 32, (int) fillValue);
	}
	
	public void poison() {
		this.color = Color.GRAY;
	}

	@Override
	public void collide(Movable m) {
		m.collideWithMushroom(this);
	}

	@Override
	public void collideWithPlayer(Player p) {
		p.setIsMoveValid(false);
	}

	@Override
	public void collideWithMushroom(Mushroom m) {
		this.die();
	}

	@Override
	public void collideWithCentipede(Centipede c) {
//		c.setIsMoveValid(false);
		c.hitMushroom();
	}

	@Override
	public Rectangle getBounds() {
		return new Rectangle(this.x, this.y, 32, 32);
	}

	@Override
	public void collideWithBlaster(Blaster b) {
		if (!b.isDead()) {
			this.damage();
			b.die();
		}
	}

	@Override
	public void collideWithScorpion(Scorpion s) {
		// TODO Auto-generated method stub.
		s.collideWithMushroom(this);
	}

	@Override
	public void collideWithSpider(Spider sp) {
		
		
	}
	
	public boolean isPoisonable() {
		return this.canBePoisoned;
	}
	
	public boolean canKill() {
		return this.spiderCanKill;
	}

	@Override
	public void collideWithRYNO(RYNO r) {
		this.damage();
	}

	@Override
	public void collideWithLancer(Lancer s) {
		this.damage();
	}

}
